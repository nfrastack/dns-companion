# Example: Including another YAML file
include: dns-extra.yaml

general:
  log_level: "info"
  log_timestamps: true
  dry_run: false
  poll_profiles:
    - docker

defaults:
  record:
    type: "A"
    ttl: 300
    # target: "target.example.com"  # (Optional) Set a default target
    update_existing: true
    allow_multiple: false

providers:
  cf_example:
    type: "cloudflare"
    api_token: "your_scoped_api_token_here"
    #api_email: "youremail@if.using.global.api"
    #api_key: "global_api_key_here"

  hosts_example:
    type: "hosts"
    source: "./hosts"            # Path to the hosts file to manage
    user: nobody                 # (optional) Username or UID to own the file
    group: nogroup               # (optional) Group name or GID to own the file
    mode: 0644                   # (optional) File permissions (octal, e.g. 0644)
    # Only A and AAAA records are supported. CNAMEs are automatically flattened.

polls:
  pollexample:
    type: "docker"
    host: "unix:///var/run/docker.sock"   #Unix socket
    api_auth_user: ""
    api_auth_pass: ""
    #host: "tcp://docker.example.com:2376" #TLS
    expose_containers: true
    filter_type: "none"
    process_existing_containers: false
    record_remove_on_stop: true
    #tls:
    #  verify: true
    #  ca: "/etc/docker/certs/ca.pem"
    #  cert: "/etc/docker/certs/cert.pem"
    #  key: "/etc/docker/certs/key.pem"

  pollexample2:
    type: traefik
    api_url: http://traefik:8080/api/http/routers
    interval: 30s  # or 60, 1m, 1h, etc.
    config_path: /etc/traefik/dynamic
    process_existing: true  # Process existing routers on startup
    record_remove_on_stop: true  # Remove DNS records when router is removed

  file_example:
    type: file
    source: ./result/records.yaml
    format: yaml # or json (optional, autodetects by extension)
    interval: -1 # watch mode (default)
    process_existing: true
    record_remove_on_stop: true

  remote_example:
    type: remote
    remote_url: https://example.com/records.yaml
    format: yaml # or json (optional, autodetects by extension)
    interval: 30s # Poll every 30 seconds
    process_existing: true
    record_remove_on_stop: true
    remote_auth_user: myuser # Optional HTTP Basic Auth
    remote_auth_pass: mypassword # Optional HTTP Basic Auth

domains:
  domainexample:
    name: "example.com"
    provider: "providerexample"
    zone_id: "your_zone_id_here" # Optional - Only needed for Global API key in Cloudflare
    record:
      type: "A"
      ttl: 60
      target: "192.0.2.1"
      update_existing: true
      allow_multiple: true
    exclude_subdomains:
      - dev
      - staging
